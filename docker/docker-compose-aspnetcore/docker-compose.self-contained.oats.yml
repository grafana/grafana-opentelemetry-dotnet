services:
  aspnetcore:
    image: ${DOCKER_REGISTRY-}aspnetcore
    build:
      context: ../..
      dockerfile: examples/net8.0/aspnetcore/Dockerfile
      args:
        DOTNET_PUBLISH_ARGS: "--self-contained true /p:PublishSingleFile=true"
    entrypoint: ./aspnetcore
    environment:
      - AWS_ACCESS_KEY_ID=localstack
      - AWS_SECRET_ACCESS_KEY=localstack
      - AWS_REGION=us-east-1
      - AWS_ENDPOINT_URL_S3=http://localstack:4566
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://lgtm:4317
    ports:
      - "5000:8080"
      - "8080:8080" # for OATs
    depends_on:
      - redis
      - mssql
  redis:
    image: redis:8.0@sha256:b43d2dcbbdb1f9e1582e3a0f37e53bf79038522ccffb56a25858969d7a9b6c11
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
  mssql:
    image: mcr.microsoft.com/mssql/server:2025-latest@sha256:e2e5bcfe395924ff49694542191d3aefe86b6b3bd6c024f9ea01bf5a8856c56e
    ports:
      - "1433:1433"
    environment:
    - ACCEPT_EULA=Y
    - MSSQL_SA_PASSWORD=Password12345%%
  localstack:
    image: localstack/localstack:4.6.0@sha256:5a97e0f9917a3f0d9630bb13b9d8ccf10cbe52f33252807d3b4e21418cc21348
    ports:
      - "4510-4559:4510-4559"
      - "4566:4566"
