include:
  - ./oats-template.yml
input:
  - path: /api/Aws/ListBuckets
  - path: /api/HttpClient/Get
  - path: /api/HttpClient/GetError
  - path: /api/MsSql/ServerInfo
  - path: /api/MsSql/Tables
  - path: /api/Redis/LeftPush
  - path: /api/todo/items
expected:
  logs:
    - logql: '{ service_name="aspnetcore" } |~ `Application started.`'
      contains:
        - 'Application started'
  metrics:
    - promql: http_client_request_duration_seconds_count{}
      value: '>= 0'
    - promql: http_client_request_duration_seconds_count{http_request_method="GET", http_response_status_code="200"}
      value: '>= 0'
  traces:
    - traceql: '{ resource.process.pid > 0 }'
      spans:
        - name: 'GET'
    - traceql: '{ span.http.route =~ "api/HttpClient/Get" }'
      spans:
        - name: 'GET api/HttpClient/Get'
          attributes:
            http.request.method: GET
        - name: 'GET api/HttpClient/Get'
          attributes:
            service.name: aspnetcore
            service.version: 1.0.0.0
            telemetry.distro.name: grafana-opentelemetry-dotnet
            telemetry.distro.version: regex:.+
            deployment.environment: production
            process.runtime.description: regex:.NET.+
            process.runtime.name: .NET
            process.runtime.version: regex:.+
            host.name: regex:.+
            telemetry.sdk.name: opentelemetry
            telemetry.sdk.language: dotnet
            telemetry.sdk.version: regex:.+
    - traceql: '{ span.http.route =~ "api/HttpClient/GetError" }'
      spans:
        - name: 'GET api/HttpClient/GetError'
          attributes:
            http.request.method: GET
        - name: 'GET'
          attributes:
            error.type: '500'
            http.request.method: GET
            http.response.status_code: '500'
    - traceql: '{ span.http.route =~ "api/MsSql/ServerInfo" }'
      spans:
        - name: 'master'
          attributes:
            db.system: mssql
            db.name: master
            db.statement: sp_server_info
            otel.library.name: OpenTelemetry.Instrumentation.SqlClient
    - traceql: '{ span.http.route =~ "api/MsSql/Tables" }'
      spans:
        - name: 'master'
          attributes:
            db.system: mssql
            db.name: master
            otel.library.name: OpenTelemetry.Instrumentation.SqlClient
    - traceql: '{ span.http.route =~ "api/Redis/LeftPush" }'
      spans:
        - name: 'LPUSH'
          attributes:
            db.statement: LPUSH
            db.system: redis
            db.redis.database_index: '0'
            server.address: redis
    - traceql: '{ span.http.route =~ "/api/todo/items/" }'
      spans:
        - name: 'main'
          attributes:
            db.system: sqlite
            db.name: main
            server.address: /app/App_Data/TodoApp.db
            otel.library.name: OpenTelemetry.Instrumentation.EntityFrameworkCore
    - traceql: '{ span.http.route =~ "api/Aws/ListBuckets" }'
      spans:
        - name: 'S3.ListBuckets'
          attributes:
            aws.request_id: regex:.+
            otel.library.name: AWSSDK.S3
            rpc.method: ListBuckets
            rpc.service: S3
            rpc.system: aws-api
